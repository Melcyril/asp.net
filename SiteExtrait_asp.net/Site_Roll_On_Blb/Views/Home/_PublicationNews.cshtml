@*@using Site_Roll_On_Blb.Models;
@model Site_Roll_On_Blb.Models.Publication*@
@{
    //IEnumerable<Publication> ListeNews = ViewBag.News;
    int i = 0;
    string stock = "";
    string[] tabextension;
    string[] taburl;
    int dernierpoint = 0;
    int indice;
    string extension = "";

}



<div class="container-fluid corp1">
    <div class="row">
        @*partie News*@
        <div class="col-md-12 titrenews"><h1>NeWS</h1><hr class="barrerougeheader"></div>
        
        <div class="col-md-9 pubnews">
            @foreach (var item in ItemsPublicationNews)
            {
                try
                {

                    if (item.urlPublication.Equals("") && item.url1Publication.Equals("") && item.url2Publication.Equals("") && item.url3Publication.Equals("") && item.url4Publication.Equals("") && item.url5Publication.Equals(""))
                    {
                        <div class="div_artnomedia">

                            @{
                                stock = "normal_article" + i.ToString();
                            }

                            <h5> @Html.Label("textePublication", item.titrePublication)</h5>

                            <p class="p_pub_artnomedia" id="@stock">
                                <a class="a_pub_artnomedia">
                                    @Html.Label("textePublication", item.contenuPublication)
                                </a>
                            </p>
                        </div>

                    }
                    else
                    {
                        //tableau d'url
                        taburl = new string[] { item.urlPublication, item.url1Publication, item.url2Publication, item.url3Publication, item.url4Publication, item.url5Publication };
                        <div class="art">
                            <h3>@Html.Label("textePublication", item.titrePublication)</h3>
                            <hr class="barrebleu">

                            @for (int cpt = 0; cpt < taburl.Length; cpt++)
                            {
                                if (taburl[cpt] != null)
                                {
                                    //recherche de l'extension
                                    tabextension = taburl[cpt].Split('.');
                                    dernierpoint = tabextension.Count();
                                    indice = dernierpoint - 1;
                                    extension = tabextension[indice].ToLower();

                                    //comparaison de l'extension du fichier pour reconaitre si c'est une photo ou une video
                                    if (extension.Equals("jpg") || extension.Equals("jpeg") || extension.Equals("gif") || extension.Equals("png"))
                                    {

                                        <img class="img_article" src="@taburl[cpt]">
                                    }
                                    else if (extension.Equals("3gp") || extension.Equals("avi") || extension.Equals("mov") || extension.Equals("mp4"))
                                    {
                                        <video controls width="70%" controlsList="nodownload">
                                            <source src="@taburl[cpt]" type="video/mp4" />
                                        </video>
                                    }
                                }
                            }
                            <h3> @Html.Label("textePublication", item.sousTitrePublication)</h3>
                            <hr class="barrebleu">
                            @{
                                stock = "mini_article" + i.ToString();
                            }
                            <p class="p_artmini" id="@stock">
                                @Html.Label("textePublication", item.souscontenuPublication)
                            </p>
                            @{
                                stock = "normal_article" + i.ToString();
                            }
                            <p class="p_art" id="@stock">
                                @Html.Label("textePublication", item.contenuPublication)
                            </p>
                            <div class="lien_article">
                                @{
                                    stock = "agrandir" + i.ToString();
                                }
                                <a class="agrandir" id="@stock" title="agrandir"><i class="fa fa-chevron-down"></i></a>
                                @{
                                    stock = "reduire" + i.ToString();
                                }
                                <a class="reduire" id="@stock" title="réduire"><i class="fa fa-chevron-up"></i></a>
                            </div>

                        </div>
                    }

                    @*<hr class="barrerouge">*@

                    i++;
                }
                catch (Exception) { }
            }
            @if (Model.Pager.PageFin > 1)
            {
                <ul class="pagination">
                    @if (Model.Pager.CurrentPage > 1)
                    {
                        <li>
                            <a href="~/home/index">Premier page</a>
                        </li>
                    }
                    @for (var page = Model.Pager.PageDebut; page <= Model.Pager.PageFin; page++)
                    {
                        <li class="@(page == Model.Pager.CurrentPage ?"active" : "")">
                            <a href="~/Galeries/_Galerie?page=@page">@page</a>
                        </li>
                    }
                    @if (Model.Pager.CurrentPage < Model.Pager.TotalPages)
                    {
                        <li>
                            <a href="~/home/Index?page=@(Model.Pager.TotalPages)">Derniere page</a>
                        </li>
                    }
                </ul>
            }
            <a class="retourHP" title="Retour haut de page"><i class="fa fa-arrow-up"></i></a>
        </div>

        @*partie evenement*@
        <div class="col-md-3 contenupartiedroite">

            @Html.Partial("~/Views/Publications/_Evenement_future_dernier.cshtml", new ViewDataDictionary { { "_Evenement_future_dernier", ViewBag.EvenementRealiseDernier } })

            @Html.Partial("~/Views/Publications/_Evenement_realise_dernier.cshtml", new ViewDataDictionary { { "_Evenement_realise_dernier", ViewBag.EvenementFutureDernier } })
        </div>
    </div>
</div>

